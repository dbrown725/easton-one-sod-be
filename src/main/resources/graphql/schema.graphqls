type Query {
  bookById(id: ID): Book
  bullpenSongById(id: ID): Song
  getAllBullpenSongs(count: Int): [Song]
  songBySearchText(searchText: String): [Song]
  getMostRecentSongs(count: Int): [Song]
  getSongsWithIssuesCount: Int
  getSongsWithIssues(count: Int): [Song]
}

type Mutation {
   addBullpenSong(title: String!, link: String!, message: String!, bandName: String!, songName: String!, userId: ID!):Song     
   updateBullpenSong(id: ID!, title: String, link: String, message: String, bandName: String, songName: String, sortOrder: Int):Song
   deleteBullpenSong(id: ID!): Boolean
   
   insertSodSong(title: String!, playlist: String!, link: String!, bandName: String!, songName: String!, message: String!, userId: ID!):Song
   updateSodSong(id: ID!, title: String!, playlist: String!, link: String!, bandName: String!, songName: String!, userId: ID!):Song
}

type Book {
  id: ID
  name: String
  pageCount: Int
  author: Author
}

type Author {
  id: ID
  firstName: String
  lastName: String
}

type Song {
  id: ID
  title: String
  titleHighlighted: String
  bandNameHighlighted: String
  songNameHighlighted: String
  link: String
  playlist: String
  bandName: String
  songName: String
  score: Float
  message: String
  sortOrder: Int
  userId: Int
  userFirstName: String
  userLastName: String
  userAvatarColor: String
  createTime: String
  modifyTime: String
}

