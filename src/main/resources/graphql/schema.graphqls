type Query {
  bookById(id: ID): Book
  bullpenSongById(id: ID): Song
  getAllBullpenSongs(count: Int): [Song]
  songBySearchText(searchText: String): [Song]
  getMostRecentSongs(count: Int): [Song]
  getSongsWithIssuesCount: Int
  getSongsWithIssues(count: Int): [Song]
  getSongById(songId: ID): Song
  getUserInfo: User
  getUserRole(userId: ID): String
  getBandStats(count: Int, userId: ID): [BandStats]
  getUsersForDropDown: [User]
}

type Mutation {
   addBullpenSong(title: String!, link: String!, message: String!, bandName: String!, songName: String!):Song
   updateBullpenSong(id: ID!, title: String, link: String, message: String, bandName: String, songName: String, sortOrder: Int):Song
   deleteBullpenSong(id: ID!): Boolean
   
   insertSodSong(title: String!, playlist: String!, link: String!, bandName: String!, songName: String!, message: String!):Song
   updateSodSong(id: ID!, title: String!, playlist: String!, link: String!, bandName: String!, songName: String!):Song
   adminInsertSodSong(title: String!, playlist: String!, link: String!, bandName: String!, songName: String!, message: String!, userId: ID!):Song
   setUserRole(role: String!, userId: ID!): Boolean
   insertSongComment(songId: Int!, comment: String!):SongComment
   updateSongComment(id: ID!, comment: String!):SongComment
   deleteSongComment(id: ID!): Boolean
   updateEmailPreference(emailPreference: String!): User
   updatePrivacyOn(privacyOn: Boolean!): User
}

type Book {
  id: ID
  name: String
  pageCount: Int
  author: Author
}

type Author {
  id: ID
  firstName: String
  lastName: String
}

type Song {
  id: ID
  title: String
  titleHighlighted: String
  bandNameHighlighted: String
  songNameHighlighted: String
  link: String
  playlist: String
  bandName: String
  songName: String
  score: Float
  message: String
  sortOrder: Int
  userId: Int
  userFirstName: String
  userLastName: String
  userAvatarColor: String
  songComments: [SongComment]
  createTime: String
  modifyTime: String
  userIsTheSubmitter: Boolean
  privacyOn: Boolean
}

type SongComment {
	id: ID
	songId: Int
	comment: String
	userId: Int
  	userFirstName: String
  	userLastName: String
  	userAvatarColor: String
  	userIsTheSubmitter: Boolean
  	privacyOn: Boolean
  	createTime: String
  	modifyTime: String
}

type User {
  id: ID
  uid: String
  email: String
  emailPreference: String
  privacyOn: Boolean
  isEmailVerified: Boolean
  issuer: String
  firstName: String
  lastName: String
  screenName: String
  avatarColor: String
}

type BandStats {
  bandName: String
  songCount: Int
}

